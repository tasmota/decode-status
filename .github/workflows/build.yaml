name: "pre-release"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  build-win:
    name: "Build Windows"
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [x64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build ${{ matrix.architecture }} with pyinstaller
        run: |
          pyinstaller ds-build-win-${{ matrix.architecture }}.spec
      - name: Upload Windows binarys
        uses: jason2866/upload-artifact@v2.0.3
        with:
          name: decode-status-windows
          path: dist/decode-status-${{ matrix.architecture }}.exe


  build-mac:
    name: Build for ${{ matrix.os }}
    needs: build-win
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, macos-latest]
        include:
        - os: macos-14
          TARGET: macos-arm
        - os: macos-latest
          TARGET: macos
    env:
      DISTPATH: decode-status-${{ matrix.TARGET }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          brew install create-dmg
      - name: Build with pyinstaller
        run: |
          pyinstaller ds-build-mac.spec
          rm -Rf dist/*.app
          create-dmg decode-status.dmg dist
      - name: Upload Mac binary
        uses: jason2866/upload-artifact@v2.0.3
        with:
          name:  ${{ env.DISTPATH }}
          path: /Users/runner/work/decode-status/decode-status/decode-status.dmg

  release:
    name: "Release Decode-status"
    needs: build-mac
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - uses: jason2866/download-artifact@v3
        with:
          name: |
            decode-status-windows
            decode-status-macos
            decode-status-macos-arm
          path: |
            ./output/
            ./output/
      - name: Release
        uses: jason2866/action-gh-release@v1.3
        with:
          tag_name: ${{ github.run_number }}
          files: ./output/*
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
